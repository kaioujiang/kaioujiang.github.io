{"meta":{"title":"蒋开欧|个人博客","subtitle":null,"description":null,"author":"蒋开欧","url":"http://yoursite.com"},"pages":[{"title":"关于我","date":"2018-03-26T13:57:45.000Z","updated":"2018-03-26T13:57:45.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"jangkaiou"},{"title":"Categories","date":"2018-03-25T06:34:14.000Z","updated":"2018-03-22T07:24:04.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-03-25T06:34:14.000Z","updated":"2018-03-22T07:24:04.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"java网络编程","slug":"java网络编程","date":"2018-03-26T14:03:54.000Z","updated":"2018-03-26T14:34:54.000Z","comments":true,"path":"2018/03/26/java网络编程/","link":"","permalink":"http://yoursite.com/2018/03/26/java网络编程/","excerpt":"Java基础1、List 和 Set 的区别 2、HashSet 是如何保证不重复的 3、HashMap是线程安全的吗，为什么不是线程安全的（最好画图说明多线程环境下不安全）?","text":"Java基础1、List 和 Set 的区别 2、HashSet 是如何保证不重复的 3、HashMap是线程安全的吗，为什么不是线程安全的（最好画图说明多线程环境下不安全）? 4、HashMap 的扩容过程 5、HashMap 1.7 与 1.8 的 区别，说明 1.8 做了哪些优化，如何优化的？ 6、final finally finalize 7、强引用、软引用、弱引用、虚引用 8、Java反射 9、Arrays.sort 实现原理和 Collection实现原理 10、LinkedHashMap的应用 11、cloneable接口实现原理 12、异常分类以及处理机制 13、wait和sleep的区别 14、数组在内存中如何分配 1、面向对象的特性有哪些？ gitchat 2、java中的覆盖和重载是什么意思 3、抽象类和接口的区别有哪些 4、java和c++的区别 5、java中的值传递和引用传递 6、jdk中常用的包有哪些 7、jdk jre jvm 的联系和区别 8、反射、泛型、注解 1、常见的集合有哪些 2、hashmap和hashtable的区别有哪些 3、hashmap的底层实现 4、concurrenthashmap和hashtable 的区别 5、hashmap的长度为什么是2的幂次方 6、list 和set的区别 7、list set map 的初始容量和加载因子 8、comparable接口和comparator接口有什么区别 9、java集合的快速失败机制“fail-fast” 1、Arrays.sort实现原理和Collections.sort实现原理。 答：Collections.sort方法底层会调用Arrays.sort方法，底层实现都是TimeSort实现的。TimSort算法就是找到已经排好序数据的子序列，然后对剩余部分排序，然后合并起来. foreach和while的区别(编译之后) 线程池的种类，区别和使用场景 分析线程池的实现原理和线程的调度过程 线程池如何调优 线程池的最大线程数目根据什么确定 动态代理的几种方式 HashMap的并发问题 了解LinkedHashMap的应用吗 反射的原理，反射创建类实例的三种方式是什么？ cloneable接口实现原理，浅拷贝or深拷贝 Java NIO使用 hashtable和hashmap的区别及实现原理，hashmap会问到数组索引，hash碰撞怎么解决 arraylist和linkedlist区别及实现原理 反射中，Class.forName和ClassLoader区别 String，Stringbuffer，StringBuilder的区别？ 有没有可能2个不相等的对象有相同的hashcode 简述NIO的最佳实践，比如netty，mina TreeMap的实现原理 Java 并发1、synchronized 的实现原理以及锁优化？ 2、volatile 的实现原理？ 3、Java 的信号灯？ 4、synchronized 在静态方法和普通方法的区别？ 5、怎么实现所有线程在等待某个事件的发生才会去执行？ 6、CAS？CAS 有什么缺陷，如何解决？ 7、synchronized 和 lock 有什么区别？ 8、Hashtable 是怎么加锁的 ？ 9、HashMap 的并发问题？ 10、ConcurrenHashMap 介绍？1.8 中为什么要用红黑树？ 11、AQS 12、如何检测死锁？怎么预防死锁？ 13、Java 内存模型？ 14、如何保证多线程下 i++ 结果正确？ 15、线程池的种类，区别和使用场景？ 16、分析线程池的实现原理和线程的调度过程？ 17、线程池如何调优，最大数目如何确认？ 18、ThreadLocal原理，用的时候需要注意什么？ 19、CountDownLatch 和 CyclicBarrier 的用法，以及相互之间的差别? 20、LockSupport工具 21、Condition接口及其实现原理 22、Fork/Join框架的理解 23、分段锁的原理,锁力度减小的思考 24、八种阻塞队列以及各个阻塞队列的特性 1、多线程和单线程的区别和联系 2、如何指定多个线程的执行顺序 3、线程和进程的区别 4、多线程产生死锁的四个必要条件 5、sleep wait() wait(n) 的区别 6、synchronized 关键字 7、volatile 8、threadlocal（线程局部变量）关键字 9、atomic关键字 ThreadLocal用过么，原理是什么，用的时候要注意什么 Synchronized和Lock的区别 synchronized 的原理，什么是自旋锁，偏向锁，轻量级锁，什么叫可重入锁，什么叫公平锁和非公平锁 concurrenthashmap具体实现及其原理，jdk8下的改版 用过哪些原子类，他们的参数以及原理是什么 cas是什么，他会产生什么问题（ABA问题的解决，如加入修改次数、版本号） 如果让你实现一个并发安全的链表，你会怎么做 简述ConcurrentLinkedQueue和LinkedBlockingQueue的用处和不同之处 简述AQS的实现原理 countdowlatch和cyclicbarrier的用法，以及相互之间的差别? concurrent包中使用过哪些类？分别说说使用在什么场景？为什么要使用？ LockSupport工具 Condition接口及其实现原理 Fork/Join框架的理解 jdk8的parallelStream的理解 分段锁的原理,锁力度减小的思考 Spring1、BeanFactory 和 FactoryBean？ 2、Spring IOC 的理解，其初始化过程？ 3、BeanFactory 和 ApplicationContext？ 4、Spring Bean 的生命周期，如何被管理的？ 5、Spring Bean 的加载过程是怎样的？ 6、如果要你实现Spring AOP，请问怎么实现？ 7、如果要你实现Spring IOC，你会注意哪些问题？ 8、Spring 是如何管理事务的，事务管理机制？ 9、Spring 的不同事务传播行为有哪些，干什么用的？ 10、Spring 中用到了那些设计模式？ 11、Spring MVC 的工作原理？ 12、Spring 循环注入的原理？ 13、Spring AOP的理解，各个术语，他们是怎么相互工作的？ 14、Spring 如何保证 Controller 并发的安全？ 1、spring的ioc和aop 2、aop的实现方式有哪几种？如何选择？ 3、springmvc的核心控制器是什么？消息处理流程有哪些？ 4、其他问题包括：重定向和转发的区别、动态代理的区别等 5、Mybatis的占位符#和$的区别 Spring AOP与IOC的实现原理 Spring的beanFactory和factoryBean的区别 为什么CGlib方式可以对接口实现代理？ RMI与代理模式 Spring的事务隔离级别，实现原理 对Spring的理解，非单例注入的原理？它的生命周期？循环注入的原理，aop的实现原理，说说aop中的几个术语，它们是怎么相互工作的？ Mybatis的底层实现原理 MVC框架原理，他们都是怎么做url路由的 spring boot特性，优势，适用场景等 quartz和timer对比 spring的controller是单例还是多例，怎么保证并发的安全 Netty1、BIO、NIO和AIO 2、Netty 的各大组件 3、Netty的线程模型 4、TCP 粘包/拆包的原因及解决方法 5、了解哪几种序列化协议？包括使用场景和如何去选择 6、Netty的零拷贝实现 7、Netty的高性能表现在哪些方面 分布式相关1、Dubbo的底层实现原理和机制 2、描述一个服务从发布到被消费的详细过程 3、分布式系统怎么做服务治理 4、接口的幂等性的概念 5、消息中间件如何解决消息丢失问题 6、Dubbo的服务请求失败怎么处理 7、重连机制会不会造成错误 8、对分布式事务的理解 9、如何实现负载均衡，有哪些算法可以实现？ 10、Zookeeper的用途，选举的原理是什么？ 11、数据的垂直拆分水平拆分。 12、zookeeper原理和适用场景 13、zookeeper watch机制 14、redis/zk节点宕机如何处理 15、分布式集群下如何做到唯一序列号 16、如何做一个分布式锁 17、用过哪些MQ，怎么用的，和其他mq比较有什么优缺点，MQ的连接是线程安全的吗 18、MQ系统的数据如何保证不丢失 19、列举出你能想到的数据库分库分表策略；分库分表后，如何解决全表查询的问题 20、zookeeper的选举策略 21、全局ID Dubbo的底层实现原理和机制 描述一个服务从发布到被消费的详细过程 分布式系统怎么做服务治理 接口的幂等性的概念 消息中间件如何解决消息丢失问题 Dubbo的服务请求失败怎么处理 重连机制会不会造成错误 对分布式事务的理解 如何实现负载均衡，有哪些算法可以实现？ Zookeeper的用途，选举的原理是什么？ 数据的垂直拆分水平拆分。 zookeeper原理和适用场景 zookeeper watch机制 redis/zk节点宕机如何处理 分布式集群下如何做到唯一序列号 如何做一个分布式锁 用过哪些MQ，怎么用的，和其他mq比较有什么优缺点，MQ的连接是线程安全的吗 MQ系统的数据如何保证不丢失 列举出你能想到的数据库分库分表策略；分库分表后，如何解决全表查询的问题。 数据库1、mysql分页有什么优化 2、悲观锁、乐观锁 3、组合索引，最左原则 4、mysql 的表锁、行锁 5、mysql 性能优化 6、mysql的索引分类：B+，hash；什么情况用什么索引 7、事务的特性和隔离级别 1、mysql和mongodb的区别有哪些？如何选择 2、mongodb的优缺点有哪些 3、事务 4、事务的并发问题有哪几种 5、数据库中的锁有哪几种 6、事务的隔离级别有哪几种 7、数据库的索引有什么作用？底层数据结构是什么？为什么使用这种数据结构？ 8、MyISAM和InnoDB的区别有哪些？ 9、数据库中where group by having 关键字 10、mysql和sql server用法上的区别、limit关键字的使用等问题 MySQL InnoDB存储的文件结构 索引树是如何维护的？ 数据库自增主键可能的问题 MySQL的几种优化 mysql索引为什么使用B+树 数据库锁表的相关处理 索引失效场景 高并发下如何做到安全的修改同一行数据，乐观锁和悲观锁是什么，INNODB的行级锁有哪2种，解释其含义 数据库会死锁吗，举一个死锁的例子，mysql怎么解决死锁 缓存1、Redis用过哪些数据数据，以及Redis底层怎么实现 2、Redis缓存穿透，缓存雪崩 3、如何使用Redis来实现分布式锁 4、Redis的并发竞争问题如何解决 5、Redis持久化的几种方式，优缺点是什么，怎么实现的 6、Redis的缓存失效策略 7、Redis集群，高可用，原理 8、Redis缓存分片 9、Redis的数据淘汰策略 Redis的并发竞争问题如何解决了解Redis事务的CAS操作吗 缓存机器增删如何对系统影响最小，一致性哈希的实现 Redis持久化的几种方式，优缺点是什么，怎么实现的 Redis的缓存失效策略 缓存穿透的解决办法 redis集群，高可用，原理 mySQL里有2000w数据，redis中只存20w的数据，如何保证redis中的数据都是热点数据 用Redis和任意语言实现一段恶意登录保护的代码，限制1小时内每用户Id最多只能登录5次 redis的数据淘汰策略 JVM1、详细jvm内存模型 2、讲讲什么情况下回出现内存溢出，内存泄漏？ 3、说说Java线程栈 4、JVM 年轻代到年老代的晋升过程的判断条件是什么呢？ 5、JVM 出现 fullGC 很频繁，怎么去线上排查问题？ 6、类加载为什么要使用双亲委派模式，有没有什么场景是打破了这个模式？ 7、类的实例化顺序 8、JVM垃圾回收机制，何时触发MinorGC等操作 9、JVM 中一次完整的 GC 流程（从 ygc 到 fgc）是怎样的 10、各种回收器，各自优缺点，重点CMS、G1 11、各种回收算法 12、OOM错误，stackoverflow错误，permgen space错误 1、jvm内存划分 2、类似-Xms、-Xmn这些参数的含义 3、垃圾回收算法有哪些 4、root搜索算法中，哪些可以作为root 5、gc 什么时候开始 6、内存泄漏和内存溢出 类的实例化顺序，比如父类静态数据，构造函数，字段，子类静态数据，构造函数，字段，他们的执行顺序 JVM内存分代 Java 8的内存分代改进 JVM垃圾回收机制，何时触发MinorGC等操作 jvm中一次完整的GC流程（从ygc到fgc）是怎样的，重点讲讲对象如何晋升到老年代，几种主要的jvm参数等 你知道哪几种垃圾收集器，各自的优缺点，重点讲下cms，g1 新生代和老生代的内存回收策略 Eden和Survivor的比例分配等 深入分析了Classloader，双亲委派机制 JVM的编译优化 对Java内存模型的理解，以及其在并发中的应用 指令重排序，内存栅栏等 OOM错误，stackoverflow错误，permgen space错误 JVM常用参数 tomcat结构，类加载器流程 volatile的语义，它修饰的变量一定线程安全吗 g1和cms区别,吞吐量优先和响应优先的垃圾收集器选择 说一说你对环境变量classpath的理解？如果一个类不在classpath下，为什么会抛出ClassNotFoundException异常，如果在不改变这个类路径的前期下，怎样才能正确加载这个类？ 说一下强引用、软引用、弱引用、虚引用以及他们之间和gc的关系 java8知识点：1、hashmap底层的实现有哪些变化 2、jvm 内存管理方面 3、lambda表达式（闭包） 4、函数式接口 5、引入重复注解 6、接口中可以实现方法 default 7、注解的使用场景拓宽 8、新的包java.timer 网络协议相关：1、三次握手、四次挥手示意图 2、滑动窗口机制 3、拥塞避免机制 4、浏览器中输入：“www.xxx.com”之后都发生了什么？请详细阐述 5、常见http状态码 6、tcp和udp的区别 http1.0和http1.1有什么区别 TCP/IP协议 TCP三次握手和四次挥手的流程，为什么断开连接要4次,如果握手只有两次，会出现什么 TIME_WAIT和CLOSE_WAIT的区别 说说你知道的几种HTTP响应码 当你用浏览器打开一个链接的时候，计算机做了哪些工作步骤 TCP/IP如何保证可靠性，数据包有哪些数据组成 长连接与短连接 Http请求get和post的区别以及数据包格式 简述tcp建立连接3次握手，和断开连接4次握手的过程；关闭连接时，出现TIMEWAIT过多是由什么原因引起，是出现在主动断开方还是被动断开方。 大数据相关：1、kafka基本特性： 2、核心概念 linux命令相关：1、grep、sed、awk 命令 2、文件和目录 pwd ls 3、处理文件方面的命令有：touch、cp、in、 mv rm 4、处理目录方面的命令有：mkdir 5、查看文件内容：file cat more less tail head 6、监测程序命令：ps top 7、压缩数据 8、结束进程 算法&amp;数据结构&amp;设计模式海量url去重类问题（布隆过滤器） 数组和链表数据结构描述，各自的时间复杂度 二叉树遍历 快速排序 BTree相关的操作 在工作中遇到过哪些设计模式，是如何应用的 hash算法的有哪几种，优缺点，使用场景 什么是一致性hash paxos算法 在装饰器模式和代理模式之间，你如何抉择，请结合自身实际情况聊聊 代码重构的步骤和原因，如果理解重构到模式？ 其他maven解决依赖冲突,快照版和发行版的区别 Linux下IO模型有几种，各自的含义是什么 实际场景问题，海量登录日志如何排序和处理SQL操作，主要是索引和聚合函数的应用 实际场景问题解决，典型的TOP K问题 线上bug处理流程 如何从线上日志发现问题 linux利用哪些命令，查找哪里出了问题（例如io密集任务，cpu过度） 场景问题，有一个第三方接口，有很多个线程去调用获取数据，现在规定每秒钟最多有10个线程同时调用它，如何做到。 用三个线程按顺序循环打印abc三个字母，比如abcabcabc。 常见的缓存策略有哪些，你们项目中用到了什么缓存系统，如何设计的 设计一个秒杀系统，30分钟没付款就自动关闭交易（并发会很高） 请列出你所了解的性能测试工具 后台系统怎么防止请求重复提交？ 有多个相同的接口，我想客户端同时请求，然后只需要在第一个请求返回结果的时候返回给客户端","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"}]},{"title":"java多线程","slug":"java多线程","date":"2018-03-26T14:03:21.000Z","updated":"2018-03-26T14:31:53.000Z","comments":true,"path":"2018/03/26/java多线程/","link":"","permalink":"http://yoursite.com/2018/03/26/java多线程/","excerpt":"第1章 深入Web请求过程1.1 B/S网络架构概述 1.2 如何发起一个请求 1.3 HTTP 解析","text":"第1章 深入Web请求过程1.1 B/S网络架构概述 1.2 如何发起一个请求 1.3 HTTP 解析 1.3.1 查看HTTP信息工具 1.3.2 浏览器缓存机制 1.4 DNS 域名解析 1.4.1 DNS 域名解析过程 1.4.2 跟踪域名解析过程 1.4.3 清除缓存的域名 1.4.4 几种域名解析方式 1.5 CDN 工作机制 1.5.1 CDN架构 1.5.2 负载均衡 1.5.3 CDN 动态加速 第2章 深入分析Java I/O 的工作机制2.1 Java的I/O类库基本架构 基于字节的I/O操作接口 基于字符的I/O操作接口 字节与字符的转化接口 2.2 磁盘I/O工作机制 几种访问文件的方式 Java访问磁盘文件 Java序列化技术 2.3 网络I/O工作机制 TCP 状态转化 影响网络传输的因素 Java Socket 工作机制 建立通信链路 数据传输 2.4 NIO 工作方式 BIO 带来的挑战 NIO 工作机制 Buffer 工作方式 NIO 数据访问方式 2.5 I/O 调优 磁盘I/O优化 TCP 网络参数调优 网络I/O优化 2.6 适配器模式 结构 Java I/O中的适配器模式 2.7 装饰器模式 结构 Java I/O中的装饰器模式 2.8 适配器模式与装饰器模式的区别 第3章 深入分析Java Web中的中文编码问题3.1 几种常见编码格式 3.1.1 为什么要编码 3.1.2 如何“翻译” 3.2 Java中需要编码场景 3.2.1 I/O操作中的编码 3.2.2 内存操作中的编码 3.3 Java中如何编解码 3.3.1 按照ISO-8859-1编码 3.3.2 按照GB2312编码 3.3.3 按照GBK编码 3.3.4 按照UTF-16编码 3.3.5 按照UTF-8编码 3.3.6 UTF-8编码代码片段 3.3.7 几种编码格式的比较 3.4 Java Web 中涉及的编解码 3.4.1 URL编解码 3.4.2 HTTP Header 编解码 3.4.2 POST 表单 编解码 3.4.2 HTTP BODY 编解码 3.5 JS中编码问题 3.5.1 外部引入JS文件 3.5.2 JS 的 URL 编码 3.5.3 其他需要编码的地方 3.6 常见问题分析 3.6.1 中文变成看不懂的字符 3.6.2 一个汉字变成一个问号 3.6.3 一个汉字变成两个问号 3.6.4 一种不正常的正确编码 3.7 一种繁简转换的实现方式 第4章 Javac 编译原理4.1 Javac 是什么 4.2 Javac 编译器的基本结构 4.3 Javac 工作原理分析 4.3.1 词法分析器 4.3.2 语法分析器 4.3.3 语义分析器 4.3.4 代码生成器 4.4 访问者模式 4.4.1 结构 4.4.2 Javac中访问者模式实现 第5章 深入 class 文件结构5.1 JVM指令集简介 5.1.1 与类相关的指令 5.1.2 方法的定义 5.1.3 属性的定义 5.1.4 其他指令集 5.2 class 文件头的表示形式 5.3 常量池 5.3.1 UTF8常量类型 5.3.2 Fieldref、Methodref常量类型 5.3.3 Class 常量类型 5.3.4 NameAndType 常量类型 5.4 类信息 5.5 Fields 和 Methods定义 5.6 类属性描述 5.7 Javap生成class文件结构 5.7.1 LineNumberTable 5.7.2 LocalVariableTable 第6章 深入分析ClassLoader 工作机制6.1 ClassLoader 类结构分析 6.2 ClassLoader 等级加载机制 6.3 如何加载class文件 6.3.1 加载字节码到内存 6.3.1 验证与解析 6.3.1 初始化Class对象 6.4 常见加载类错误分析 6.4.1 ClassNotFoundException 6.4.1 NoClassDefFoundError 6.4.1 UnsatisfiedLinkError 6.4.1 ClassCastException 6.4.1 ExceptionInInitializerError 6.5 常用的ClassLoader分析 6.6 如何实现自己的 ClassLoader 6.6.1 加载自定义路径下的class文件 6.6.2 加载自定义格式的class文件 6.7 实现类的热部署 6.8 Java应不应该动态加载类 第7章 JVM 体系结构与工作方式7.1 JVM 体系结构 7.1.1 何谓JVM 7.1.2 JVM体系结构详解 7.2 JVM 工作机制 7.2.1 机器如何执行代码 7.2.2 JVM为何选择基于栈的架构 7.2.3 执行引擎的架构设计 7.2.4 执行引擎的执行过程 7.2.5 JVM 方法调用栈 第8章 JVM 内存管理8.1 物理内存和虚拟内存 8.2 内核空间与用户空间 8.3 在Java中哪些组件需要使用内存 8.3.1 Java堆 8.3.2 线程 8.3.3 类和类加载器 8.3.4 NIO 8.3.5 JNI 8.4 JVM 内存结构 8.4.1 PC寄存器 8.4.2 Java 栈 8.4.3 堆 8.4.4 方法区 8.4.5 运行时常量池 8.4.6 本地方法栈 8.5 JVM 内存分配策略 通常的内存分配策略 Java中的内存分配策略 8.6 JVM 内存回收策略 静态内存分配和回收 动态内存分配和回收 如何检测垃圾 基于分代的垃圾收集算法 8.7 内存问题分析 GC日志分析 堆快找文件分析 JVM Crash 日志分析 8.8 实例1、实例2、实例3 第9章 Servlet 工作原理解析9.1 从Servlet容器说起 Servlet容器的启动过程 Web 应用的初始化工作 9.2 创建Servlet实例 创建Servlet对象 初始化Servlet 9.3 Servlet 体系结构 9.4 Servlet 如何工作 9.5 Servlet 中的 Listener 9.6 Filter 如何工作 9.7 Servlet 中的 URL-pattern 第10章 深入理解Session与Cookie10.1 理解 Cookie Cookie 属性项 Cookie 如何工作 使用Cookie 的限制 10.2 理解 Session Session 与 Cookie Session 如何工作 10.3 Cookie安全问题 10.4 分布式Session框架 存在哪些问题 可以解决哪些问题 总体实现思路 10.5 Cookie 压缩 10.6 表单重复提交问题 10.7多终端Session统一 第11章 Tomcat的系统架构与设计模式11.1 Tomcat总体设计 Tomcat 总体结构 Connector 组件 Servlet 容器Container Tomcat 中的其他组件 11.2 Tomcat中的设计模式 门面设计模式 观察者设计模式 命令设计模式 责任链设计模式 第12章 Jetty的工作原理解析第13章 Spring框架的设计理念与设计模式分析13.1 Spring骨骼架构 Spring 设计理念 核心组件如何协同工作 13.2 核心组件详解 Bean 组件 Context 组件 Core 组件 Ioc 容器如何工作 13.3 Spring 中AOP详解 动态代理的实现原理 Spring AOP 如何实现 13.4 代理模式 原理 Spring 中代理模式实现 13.5 策略模式 原理 Spring 中策略模式实现 第14章 Spring MVC 的工作机制与设计模式14.1 Spring MVC 总体设计 14.2 Control 设计 HandlerMapping初始化 HandlerAdapter初始化 Control 调用逻辑 14.3 Model 设计 14.4 View 设计 14.5 框架设计思考 为什么需要框架 需要什么样的框架 框架设计原则 “指航灯” 最基本的原则 14.6 模板模式 结构 Spring MVC 中的模板模式示例 第15章 深入分析iBatis框架之系统架构与映射原理15.1 iBatis 框架主要的类层次结构 15.2 iBatis 框架的设计策略 15.3 iBatis 框架的运行原理 15.4 示例 15.5 iBatis 对SQL语句的解析 15.6 数据库字段映射到Java对象 15.7 示例运行结果 15.8 简单工厂模式 实现原理 iBatis 中的简单工厂模式示例 15.9 工厂模式 实现原理 iBatis 中的工厂模式示例 第18章 大浏览量系统的静态化架构设计18.1 淘宝大浏览量商品详情系统简介 18.2 系统面临哪些挑战 18.3 淘宝前台系统的优化历程 18.4 大浏览量系统的静态改造 什么是静态化系统 为什么要进行静态化系统架构设计 如何改造动态系统 几种静态化方案的设计及选择 如何解决失效问题 服务端静态化方案的演进：CDN化","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"}]},{"title":"java基础知识","slug":"java基础知识","date":"2018-03-26T14:03:08.000Z","updated":"2018-03-26T14:31:50.000Z","comments":true,"path":"2018/03/26/java基础知识/","link":"","permalink":"http://yoursite.com/2018/03/26/java基础知识/","excerpt":"阿里巴巴Java开发工程师 内推一面 说说你的项目 你的项目用了gson, 有没有看过它的源码? 如果给你一个json字符串, 你要怎么把它变成一个java对象?","text":"阿里巴巴Java开发工程师 内推一面 说说你的项目 你的项目用了gson, 有没有看过它的源码? 如果给你一个json字符串, 你要怎么把它变成一个java对象? * 多线程的理解 * 集合框架的理解 * 平衡二叉搜索树的理解 阿里巴巴Java开发工程师 实习一面 看过spring源码吗? 说说IoC和AOP的概念以及源码实现 Java垃圾回收机制 JVM内存模型 linux命令: 如何查询哪些端口被占用 三次握手/四次挥手机制 mysql索引的理解 腾讯后台开发工程师 实习一面 线程和进程的区别 静态变量和全局变量的区别 c++的虚函数表 三次握手/四次挥手 TCP洪水攻击 实现单链表翻转算法 网易互联网Java开发工程师 一面 Session的实现原理和应用场景 对Java的集合框架有什么样的了解, 用过哪些集合类, 各自的效率以及适用场景 Java的异常处理机制, 说说受检异常和运行时异常的区别并举例 MySql索引作用; SQL语句的5个连接概念 列举出你拿得出手的所有项目并说说你在其中的职责 说说你在做项目的过程中通过引入新的观念从而解决难题的事例 举出你在开发过程中遇到的原先不知道的bug, 通过各种方式定位bug并最终成功解决的例子 欢聚时代Java开发工程师 一面 一个分布式系统中, 本地函数 int getTradingAverage(int[] uids)表示传入一个用户id数组用于求用户消费的平均值, 远程服务器提供了接口: int getTrading(int uid)表示查询用户uid的消费金额, 请利用远程服务编程实现高效的本地函数. 大型论坛网站难免会出现敏感评论, 如何过滤敏感评论 说说你的项目 实习过程的redis集群方案调研具体是什么情况 Session原理; 既然Session是存储在服务器内存的, 如果服务器的负载量很高内存负荷不住要怎么办? 用户登录功能是怎么实现的?你这样实现没有考虑各种安全问题(跨站访问, SQL注入等), 如果考虑了呢? 华为互联网开发 一面 说说Spring MVC框架是怎么实现的 简要介绍你做过的项目 给定一个数组, 里面放置任意数量的随机数, 如何快速统计出数组中重复的数字以及出现次数 AVL树的概念, 四种旋转方式, AVL树左右旋转的例子 华为互联网开发 二面 谈谈你做的项目, 具体说一下 有带成绩单过来吗?你的成绩在学院什么水平? 你对华为有什么样的了解? 身边有人在华为吗?他的反馈如何? 你住在哪里?期望工作地在哪里? 微众银行后台开发(Java) 一面 说说你做过的项目 在实习过程中的分布式系统是怎么样的, 画图示意 Tomcat的源代码有了解吗?说说它的组织架构 Java的反射是基于怎样的原理? RPC远程过程调用是基于怎样的原理?在你的实习项目中是怎么一种形式体现? 有了解过大数据吗?谈谈hadoop的map-reduce以及你对它的理解 实习期间的Redis集群方案 你家乡在哪里?离深圳近吗? 微众银行后台开发(Java) 二面 QQ每天都会产生大量的在线日志记录, 假设每天的在线日志记录有十亿条, 请设计一个算法快速找出今天的在线人数 给定字母集合(a-z), 求出由集合中这些字母组成的所有非空子集 32位系统的内存寻址空间多大, 具体分为哪几种形态?库函数和系统调用有什么区别? 说说操作系统内一个进程的内存分段以及对应的作用 c++的set底层是什么数据结构的?(面试官以为用哈希表实现, 被我指正为红黑树了) 举出一个例子说明你的自学能力 在实习过程中遇到的难题以及解决方式 如果团队中有人心情不好, 如何进行沟通? 从实习过程中感受到了工作中哪些方面是很重要的? 百度面试资料整理：http://udn.yyuap.com/thread-17731-1-1.html简单分享想百度Java开发的一些面试经历： 一面： 1、详述在项目中遇到的难点以及如何解决的 2、项目大体框架，以及自己所做部分的框架，并拿出其中一个流程具体描述在该框架中的工作流程 3、java多线程是否有了解，描述java中Thread和Runnable的区别，项目中主要用哪个类，为什么？重点函数是什么？ 4、String类与StringBuffer类有何区别及联系？ 5、描述java内存模型？ 6、描述java垃圾回收机制？ 7、spring主要用它来做什么？具体的机制是什么？比如是如何做到IOC的？ 8、maven的用途及好处，如何创建一个maven仓库？ 9、sql语句写查询 10、写一个设计模式，单例模式，写了内部类的实现方式，追问为何这种方式可以实现延迟加载以及避免多线程引起的线程不安全。 11、简单的逻辑题：六米长的桌子上，每隔一米放一个小球，共5个小球（两个端点不放），5个小球完全一样，小球可向左或向右移动，相遇后将以相同速度向左右继续运动，求问5个小球运动轨迹最长是多少？答案很简单，但是思路很重要，需要答出小球不管是否经历过碰撞，其最远轨迹都是一样的这一点，可以从两个小球的情况出发考虑。 12、写一个排序算法。 二面： 1、简述自己做过的项目，项目背景，自己所做部分的模型图 2、spring ioc机制原理 3、java回收机制，是否有函数可以进行垃圾回收？ 4、写一个除单例模式之外的设计模式，写了构造者模式 5、是否有遇到过高并发的问题，如何解决 6、写算法：求出1~n中包含1的个数，比如{1,10,11,12}中共包含5个1。 7、写算法：一个数组循环右移K位。进阶：如果只能使用一个额外的存储空间。 三面： 1、聊天为主，主要问为什么女生想做后台研发，是因为专业还是什么？父母或男朋友是否反对过？ 2、对工作压力强度是否有足够的心理准备？ 3、足球积分赛，10支足球队进行单循环制比赛，胜一场得3分，平一场得1分，负一场得0分，问如何判断一个数字是否有可能出现在积分榜中。 4、给若干张5元纸币，若干张2元纸币，问是否能使用不找零的方式从商场中买得一件商品，写出源码面试官提出的问题 问题1： 1、聊天为主，主要问为什么女生想做后台研发，是因为专业还是什么？父母或男朋友是否反对过？ 2、对工作压力强度是否有足够的心理准备回 答：表决心为主，强调自己喜欢研发工作 http://udn.yyuap.com/thread-17731-1-1.html","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"}]},{"title":"设计模式","slug":"设计模式","date":"2018-03-25T11:36:19.000Z","updated":"2018-03-26T14:31:55.000Z","comments":true,"path":"2018/03/25/设计模式/","link":"","permalink":"http://yoursite.com/2018/03/25/设计模式/","excerpt":"设计模式1、单例模式 2、适配器模式 3、观察者模式","text":"设计模式1、单例模式 2、适配器模式 3、观察者模式 4、工厂模式 5、简单工厂模式 6、抽象工厂模式 7、责任链模式","categories":[{"name":"设计模式","slug":"设计模式","permalink":"http://yoursite.com/categories/设计模式/"}],"tags":[{"name":"设计模式","slug":"设计模式","permalink":"http://yoursite.com/tags/设计模式/"}]}]}